#include<iostream>
using namespace std;
const int V=5;
int min_key(int key[],bool visited[])
{
    int min=999,index;
    for(int i=0;i<V;i++)
    {
        if(visited[i]==false&&key[i]<min)
        {
            min=key[i];
            index=i;
        }
    }
    return index;
}
int print_MST(int parent[],int cost[V][V])
{
    int minCost=0;
    for(int i=0;i<V-1;i++)
    {
        cout<<parent[i]<<"--"<<i<<cost[i][parent[i]]<<endl;
        minCost+=cost[i][parent[i]];
    }
    cout<<"Total cost is "<<minCost<<endl;
    return 0;
}
void find(int cost[V][V])
{
    int parent[V],key[V];
    bool visited[V];
    for(int i=0;i<V;i++)
    {
        parent[i]=-1;
         key[i]=999;
         visited[i]=false;
    }
    key[0]=0;
    parent[0]=-1;
    for(int i=0;i<V-1;i++)
    {
        int u=min_key(key,visited);
        visited[u]=true;
        for(int i=0;i<V;i++)
        {
            if(cost[u][i]!=0&&visited[i]==false&&cost[u][i]<key[i])
            {
                key[i]=cost[u][i];
                parent[i]=u;
            }
        }
        
    }
    print_MST(parent,cost);
}
int main()
{
    int cost[V][V];
    int i,j;
    cout<<"Enter the matrix for 6 vertices";
    for(i=0;i<V;i++)
    {
        for(j=0;j<V;j++)
        {
            cin>>cost[i][j];
        }
    }
    find(cost);
    return 0;
}